services:
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: symfony_busapp
    restart: unless-stopped
    working_dir: /var/www/project
    networks:
      - symfony_network
    volumes:
      - .:/var/www/project
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    environment:
      APP_ENV: ${APP_ENV}
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-password}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
      PHP_IDE_CONFIG: "serverName=localhost"
    depends_on:
      - database
  web:
    image: nginx:alpine
    container_name: symfony_busapp_server
    restart: unless-stopped
    networks:
      - symfony_network
    ports:
      - "5000:80"
    volumes:
      - .:/var/www/project
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    tty: true
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - app
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: symfony_busapp_db
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - symfony_network
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
networks:
  symfony_network:
    driver: bridge